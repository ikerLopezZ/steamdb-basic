version: '3.8'
services:
  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    env_file:
      - ./api-gateway/.env
    networks:
      - steamdb_basic-network

  steam-app-info-service:
    build: ./steam-app-info-service
    ports:
      - "5000:5000"
    env_file:
      - ./steam-app-info-service/.env
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - steamdb_basic-network

  auth_service:
    build: ./auth_service
    ports:
      - "8000:8000"
    env_file:
      - ./auth_service/.env
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - steamdb_basic-network

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway
      - steam-app-info-service
      - auth_service
    networks:
      - steamdb_basic-network

  mysql-db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - steamdb_basic-network

  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - steamdb_basic-network

volumes:
  mysql-data:
  mongo-data:

networks:
  steamdb_basic-network:
